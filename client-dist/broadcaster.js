"use strict";

window.listeningPorts = [];
console.log("FRAME ALIVE HERE!");

window.addEventListener("message", function (event) {
  console.log("GOT MESSAGe", event);
  if (event.data.type == "listener") {
    console.log("ADDING LISTENER");
    listeningPorts.push(event.ports[0]);
  }
  if (event.data.type == "message") {
    console.log("get message from outside, broadcasting through storage");
    localStorage.setItem("message_", JSON.stringify(event.data));
  }
});

window.addEventListener("storage", function (event) {
  console.log("got storage event dur");
  if (event.key == "message_") {
    (function () {
      console.log("got storage message_!", event);
      var value = JSON.parse(event.newValue);
      if (value.type == "message") {
        console.log("got message from storage, sharing with ports");
        listeningPorts.forEach(function (port) {
          return port.postMessage(value.body);
        });
      }
    })();
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC1zcmMvYnJvYWRjYXN0ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7O0FBRWpDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsVUFBQSxLQUFLLEVBQUk7QUFDMUMsU0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDbEMsTUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxVQUFVLEVBQUU7QUFDakMsV0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0FBQzlCLGtCQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztHQUNyQztBQUNELE1BQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksU0FBUyxFQUFFO0FBQ2hDLFdBQU8sQ0FBQyxHQUFHLENBQUMsd0RBQXdELENBQUMsQ0FBQztBQUN0RSxnQkFBWSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztHQUM5RDtDQUNGLENBQUMsQ0FBQzs7QUFFSCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFVBQUEsS0FBSyxFQUFJO0FBQzFDLFNBQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtBQUNwQyxNQUFJLEtBQUssQ0FBQyxHQUFHLElBQUksVUFBVSxFQUFFOztBQUMzQixhQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzVDLFVBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQ3hDLFVBQUksS0FBSyxDQUFDLElBQUksSUFBSSxTQUFTLEVBQUU7QUFDM0IsZUFBTyxDQUFDLEdBQUcsQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0FBQzVELHNCQUFjLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtpQkFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7U0FBQSxDQUFDLENBQUM7T0FDOUQ7O0dBQ0Y7Q0FDRixDQUFDLENBQUMiLCJmaWxlIjoiY2xpZW50LXNyYy9icm9hZGNhc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5saXN0ZW5pbmdQb3J0cyA9IFtdO1xuY29uc29sZS5sb2coXCJGUkFNRSBBTElWRSBIRVJFIVwiKTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBldmVudCA9PiB7XG4gIGNvbnNvbGUubG9nKFwiR09UIE1FU1NBR2VcIiwgZXZlbnQpO1xuICBpZiAoZXZlbnQuZGF0YS50eXBlID09ICdsaXN0ZW5lcicpIHtcbiAgICBjb25zb2xlLmxvZyhcIkFERElORyBMSVNURU5FUlwiKVxuICAgIGxpc3RlbmluZ1BvcnRzLnB1c2goZXZlbnQucG9ydHNbMF0pO1xuICB9XG4gIGlmIChldmVudC5kYXRhLnR5cGUgPT0gJ21lc3NhZ2UnKSB7XG4gICAgY29uc29sZS5sb2coXCJnZXQgbWVzc2FnZSBmcm9tIG91dHNpZGUsIGJyb2FkY2FzdGluZyB0aHJvdWdoIHN0b3JhZ2VcIik7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ21lc3NhZ2VfJywgSlNPTi5zdHJpbmdpZnkoZXZlbnQuZGF0YSkpO1xuICB9XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBldmVudCA9PiB7XG4gIGNvbnNvbGUubG9nKCdnb3Qgc3RvcmFnZSBldmVudCBkdXInKVxuICBpZiAoZXZlbnQua2V5ID09ICdtZXNzYWdlXycpIHtcbiAgICBjb25zb2xlLmxvZygnZ290IHN0b3JhZ2UgbWVzc2FnZV8hJywgZXZlbnQpO1xuICAgIGNvbnN0IHZhbHVlID0gSlNPTi5wYXJzZShldmVudC5uZXdWYWx1ZSlcbiAgICBpZiAodmFsdWUudHlwZSA9PSAnbWVzc2FnZScpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZ290IG1lc3NhZ2UgZnJvbSBzdG9yYWdlLCBzaGFyaW5nIHdpdGggcG9ydHNcIik7XG4gICAgICBsaXN0ZW5pbmdQb3J0cy5mb3JFYWNoKHBvcnQgPT4gcG9ydC5wb3N0TWVzc2FnZSh2YWx1ZS5ib2R5KSk7XG4gICAgfVxuICB9XG59KTtcbiJdfQ==